[{"/home/syed/code/assignment/client/src/index.js":"1","/home/syed/code/assignment/client/src/reportWebVitals.js":"2","/home/syed/code/assignment/client/src/App.js":"3","/home/syed/code/assignment/client/src/Components/Register.js":"4","/home/syed/code/assignment/client/src/Components/Login.js":"5","/home/syed/code/assignment/client/src/Components/Dashboard.js":"6"},{"size":500,"mtime":1617772870147,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1617772870147,"results":"9","hashOfConfig":"8"},{"size":548,"mtime":1617783076907,"results":"10","hashOfConfig":"8"},{"size":7174,"mtime":1617783654775,"results":"11","hashOfConfig":"8"},{"size":5241,"mtime":1617784297355,"results":"12","hashOfConfig":"8"},{"size":1546,"mtime":1617785258757,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"12dut3r",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/syed/code/assignment/client/src/index.js",[],["28","29"],"/home/syed/code/assignment/client/src/reportWebVitals.js",[],"/home/syed/code/assignment/client/src/App.js",[],"/home/syed/code/assignment/client/src/Components/Register.js",["30","31"],"import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Axios from \"axios\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Redirect } from \"react-router\";\nimport validator from \"validator\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://FoodHub.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root1: {\n    width: \"100%\",\n    \"& > * + *\": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n  const [firstName, setFirstName] = useState(\"\");\n\n  const [lastName, setLastName] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [conPassword, setConPassword] = useState(\"\");\n  const [status, registerStatus] = useState();\n  const [success, setSuccess] = useState(false);\n\n  const validateEmail = (e) => {\n    e.preventDefault();\n    if (validator.isEmail(email)) {\n      if (password === conPassword) {\n        register(e);\n      } else {\n        registerStatus(\"Pasword should Match\");\n        window.scrollTo(0, 0);\n      }\n    } else {\n      window.scrollTo(0, 0);\n      registerStatus(\"Enter valid Email!\");\n    }\n  };\n\n  const register = async (e) => {\n    e.preventDefault();\n    console.log(\"dateee\", date);\n    try {\n      Axios.post(\"http://localhost:4000/\", {\n        First_Name: firstName,\n        Last_Name: lastName,\n        Email: email,\n        Password: password,\n        Date: date,\n      })\n        .then((response) => {\n          window.scrollTo(0, 0);\n\n          setSuccess(true);\n        })\n        .catch((error) => {\n          window.scrollTo(0, 0);\n\n          registerStatus(error.response.data.msg);\n        });\n    } catch (error) {\n      window.scrollTo(0, 0);\n\n      registerStatus(error.reponse.data.msg);\n    }\n  };\n\n  return (\n    <>\n      {localStorage.getItem(\"user-auth-token\") ? (\n        <Redirect to=\"/dashboard\" />\n      ) : null}\n      {success ? <Redirect to=\"/login\" /> : null}\n\n      <div className={classes.root1}>\n        {status ? <Alert severity=\"error\">{status}</Alert> : null}\n      </div>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"firstname\"\n                  label=\"First Name\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  onChange={(e) => {\n                    setFirstName(e.target.value);\n                  }}\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"lastnamename\"\n                  label=\"Last Name\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  onChange={(e) => {\n                    setLastName(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  type=\"date\"\n                  id=\"firstname\"\n                  name=\"name\"\n                  autoComplete=\"name\"\n                  onChange={(e) => {\n                    setDate(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={(e) => {\n                    setEmail(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(e) => {\n                    setPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Confirm Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={(e) => {\n                    setConPassword(e.target.value);\n                  }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={validateEmail}\n            >\n              Sign Up\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n    </>\n  );\n}\n","/home/syed/code/assignment/client/src/Components/Login.js",[],"/home/syed/code/assignment/client/src/Components/Dashboard.js",["32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":6,"column":8,"nodeType":"39","messageId":"40","endLine":6,"endColumn":24},{"ruleId":"37","severity":1,"message":"41","line":7,"column":8,"nodeType":"39","messageId":"40","endLine":7,"endColumn":16},{"ruleId":"37","severity":1,"message":"42","line":2,"column":20,"nodeType":"39","messageId":"40","endLine":2,"endColumn":24},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]